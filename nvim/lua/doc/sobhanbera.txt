Created On: 2021-01-18      For Vim version 8.2+     Last change: 2021-11-21


                    Simple Documentation to explain what
                     is going on in my personal config.


============================================================================
Table of Contents

    1. About..............................................|sobhanbera-about|
    2. Key Bindings.................................|sobhanbera-keybindings|
    3. Plugins..........................................|sobhanbera-plugins|
    4. Author Details............................|sobhanbera-author-details|


----------------------------------------------------------------------------
1. About                                                  *sobhanbera-about*

All about the configuration of NeoVim I have done since 2019. All the
configuration files are in separate files like for all plugins it they
could be found in plugins.vim, variable setters could be found in
setters.vim and main vim file is init.vim where the configuration
execution starts.


----------------------------------------------------------------------------
2. Key Bindings                                     *sobhanbera-keybindings*

-> MOD              - Mod key
-> CTRL             - Control key
-> SFT              - SFT key
-> ALT              - Alt key
-> LEADER           - Leader key
-> F<Number>        - Function keys
-> UP               - UP Arrow
-> DOWN             - Down Arrow
-> LEFT             - Left Arrow
-> RIGHT            - Right Arrow


The leader key for this config is SPACE key by default. But you can change
this behavior in shortcuts.vim file.


GENERAL NVIM KEY BINDINGS (shortcuts.vim) :
> LEADER + s                                           - Source $MYVIMRC file
> LEADER + e                                           - Opens $MYVIMRC file to edit
> LEADER + z                                           - Saves the current buffer or file
> LEADER + q                                           - Clears the current buffer
> LEADER + vs                                          - Splits the window vertically
> LEADER + hs                                          - Splits the window horizontally
> LEADER + bN                                          - Go to Previous buffer
> LEADER + bn                                          - Go to Next buffer
> LEADER + bd                                          - Delete the current buffer
> F2                                                   - Go to Previous buffer
> F3                                                   - Go to Next buffer
> LEADER + T                                           - Go to previous tab
> LEADER + t                                           - Go to next tab
> LEADER + y                                           - Yank "+y command
> LEADER + Y                                           - Yank "+yg_ command
> LEADER + yy                                          - Yank "+yy command
> LEADER + p                                           - Paste "+p command
> LEADER + P                                           - Paste "+P command
> LEADER + o                                           - Paste "+P command
> F5                                                   - Opens terminal
> CTRL + t                                             - New tab
> CTRL + t, CTRL + j                                   - Next tab
> CTRL + t, CTRL + k                                   - Previous tab
> CTRL + w                                             - Close tab
> LEADER + v                                           - Selects the current word into visual selection

COMPETITIVE PROGRAMMING SHORTCUTS (utils.vim):
> LEADER + lio                                         - opens in.txt and out.txt in vertical split
> LEADER + cp                                          - changed directory to ~/Documents/Codes
> F9                                                   - create a binary depending on java/cpp
> F10                                                  - execute the binary depending on java/cpp/python/js

Plugins Shortcuts [Commentary - commentary.vim]:
> CTRL + g                                             - Comments the current line

Plugins Shortcuts [Context - context.vim]:
> LEADER + ce                                          - Enable Contexts
> LEADER + ct                                          - Toggle Contexts
> LEADER + cd                                          - Disable Contexts

Plugins Shortcuts [Fugitive - fugitive.vim]:
> LEADER + gst                                         - Get git status
> LEADER + dg                                          - Git difference in master or main branch
> LEADER + gl                                          - Get git log (100 outputs)
> LEADER + gct                                         - Git commit
> LEADER + gp                                          - Git push

Plugins Shortcuts [Fuzzy finder - fzf.vim]:
> LEADER + FF                                          - Provides a interface with all project files
> LEADER + hh                                          - Provides a interface with all histories
> LEADER + rg                                          - All files same
> LEADER + bf                                          - All buffers list

Plugins Shortcuts [LSP saga - luasaga.vim]:
> CTRL + r                                             - diagnostic_jump_next for lua saga " don't user this currently

Plugins Shortcuts [Maximizer - maximizer.vim]:
> LEADER + m                                           - Maximize the current window

Plugins Shortcuts [NerdTree - nerdtree.vim]:
> LEADER + n                                           - Toggle nerd tree
> LEADER + N                                           - Open the current file's path in nerd tree

Plugins Shortcuts [TagBar - tagbar.vim]:
> F8                                                   - Toggle tagbar

Plugins Shortcuts [Context - context.vim]:
> LEADER + ff                                          - Find files
> LEADER + fg                                          - Live grep
> LEADER + fb                                          - buffers
> LEADER + fh                                          - Help tags

Plugins Shortcuts [Context - context.vim]:
> LEADER + U                                           - Edit snippets by ultisnips

Plugins Shortcuts [Context - context.vim]:
> LEADER + da                                          - Launch vimspector for debug proccess
> LEADER + das                                         - Stop vimspector
> LEADER + dc                                          - Cursor goes to code window
> LEADER + dt                                          - Cursor goes to tagpage window
> LEADER + dv                                          - Cursor goes to variables window
> LEADER + dw                                          - Cursor goes to watches window
> LEADER + ds                                          - Cursor goes to stack_trace window
> LEADER + do                                          - Cursor goes to output window
> LEADER + de                                          - Reset vimspector to normal
> LEADER + dtcb                                        - Clean Line Breakpoint
> LEADER + dl                                          - Step Into
> LEADER + dj                                          - Step Over
> LEADER + dk                                          - Step Out
> LEADER + d_                                          - Vimspector restart
> LEADER + d + LEADER                                  - Vimspector continue
> LEADER + drc                                         - Vimspector Run To Cursor
> LEADER + dbp                                         - Vimspector Toggle Breakpoint
> LEADER + dcbp                                        - Vimspector Toggle Conditional Breakpoint

There are many more shortcuts I have set but I think these are more than
sufficient for a intermediate javascript/typescript project.


----------------------------------------------------------------------------
3. Plugins                                              *sobhanbera-plugins*


+-----------------------------------------------------+
|           LSP PLUGINS & AUTOCOMPLETE                |
+-----------------------------------------------------+
`" Plug 'https://github.com/neoclide/coc.nvim'                                           " Auto Completion & File Formatter`
`Plug 'https://github.com/neovim/nvim-lspconfig                                          " NVIM LSP CONFIG`
`Plug 'https://github.com/glepnir/lspsaga.nvim                                           " saga for lsp to show popup msgs`
`Plug 'https://github.com/hrsh7th/nvim-compe                                             " Best autocompletion plugin`
`Plug 'https://github.com/nvim-lua/plenary.nvim                                          " Lua module for asynchronous programming using coroutines`
`Plug 'https://github.com/nvim-telescope/telescope.nvim                                  " highly extendable fuzzy finder`
`Plug 'https://github.com/nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}          " awesome syntax`
`Plug 'https://github.com/ray-x/lsp_signature.nvim                                       " mainly for function signatures`
`" Plug 'https://github.com/folke/trouble.nvim                                           " colored virtual text of LSP with this plugin...`
`Plug 'https://github.com/craigemery/vim-autotag                                         " ctags package must be installed in the system. this plugin is used to jump to definitions`

+-----------------------------------------------------+
|                    FILE FORMATTER                   |
+-----------------------------------------------------+
`Plug 'https://github.com/dense-analysis/ale                                             " file formatter`
`" since we are using lsp support and virtual texts by it so no need of this plugin....`
`" Plug 'https://github.com/metakirby5/codi.vim                                          " virtual text output`
`" Plug 'https://github.com/sbdchd/neoformat                                             " file format but currently not in use`
`" Plug 'https://github.com/Chiel92/vim-autoformat                                       " file formatter but commented`
`" Plug 'prettier/vim-prettier', { 'do': 'yarn install' }                                " this file formatter is in use currently`
`" Plug 'https://github.com/fsouza/prettierd                                             " prettier helper to make it fast`

+-----------------------------------------------------+
|                    GITHUB COPILOT                   |
+-----------------------------------------------------+
`Plug 'https://github.com/github/copilot.vim                                             " The Github Copilot`

+-----------------------------------------------------+
|                    UI COMPONENTS                    |
+-----------------------------------------------------+
`" Plug 'https://github.com/romgrk/barbar.nvim                                           " tabview in nvim commented bcz may be causing lags or everytime opens file in new tab buffer`
`Plug 'https://github.com/itchyny/lightline.vim                                          " vim bottom bar`
`Plug 'https://github.com/scrooloose/nerdtree                                            " file system`
`Plug 'https://github.com/Xuyuanp/nerdtree-git-plugin                                    " git plugin for nerdtree nvim`
`" Plug 'https://github.com/tiagofumo/vim-nerdtree-syntax-highlight                     " NERD TREE better highligher `
`Plug 'https://github.com/kassio/neoterm                                                 " terminal for vim`
`Plug 'https://github.com/kyazdani42/nvim-web-devicons                                   " required for tab plugin`
`Plug 'https://github.com/ryanoasis/vim-devicons                                         " Developer Icons seperate`
`" Plug 'https://github.com/psliwka/vim-smoothie                                         " smooth vim movements`

+-----------------------------------------------------+
|                     COLORSCHEMES                    |
+-----------------------------------------------------+
`Plug 'https://github.com/morhetz/gruvbox                                                " theme or colorscheme`
`Plug 'https://github.com/fenetikm/falcon                                                " falcon colorscheme`
`Plug 'https://github.com/ayu-theme/ayu-vim                                              " ayu colorscheme`
`Plug 'https://github.com/cocopon/iceberg.vim                                            " iceberg colorscheme`

+-----------------------------------------------------+
|                   SYNTAX AND COLORS                 |
+-----------------------------------------------------+
`Plug 'https://github.com/ap/vim-css-color                                               " css colors`
`Plug 'https://github.com/lilydjwg/colorizer                                             " highlight where every color hash or code is found in the entire codebase or files`
`Plug 'https://github.com/frazrepo/vim-rainbow                                           " new rainbow brackets`
`" Plug 'https://github.com/kien/rainbow_parentheses.vim                                 " old rainbow brackets`
`Plug 'https://github.com/leafgarland/typescript-vim                                     " typescript for vim`
`Plug 'https://github.com/peitalin/vim-jsx-typescript                                    " jsx + ts`
`Plug 'https://github.com/lifepillar/pgsql.vim                                           " sql syntax`
`Plug 'https://github.com/itchyny/vim-cursorword                                         " highlight all words that are matching the word at cursor`
`Plug 'https://github.com/mhinz/vim-startify                                             " vim start window UI provider`
`Plug 'http://github.com/tpope/vim-surround                                              " Surrounding ysw)`
`Plug 'https://github.com/tpope/vim-commentary                                           " vim comment link helper`

+-----------------------------------------------------+
|                 GIT/GITHUB RELATIVE                 |
+-----------------------------------------------------+
`Plug 'https://github.com/tpope/vim-fugitive                                             " git useful plugins`
`Plug 'https://github.com/airblade/vim-gitgutter                                         " git useful plugins`
`Plug 'https://github.com/itchyny/vim-gitbranch                                          " git useful plugins`

+-----------------------------------------------------+
|                       UTILITIES                     |
+-----------------------------------------------------+
`Plug 'https://github.com/kien/ctrlp.vim'`
`Plug 'https://github.com/junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }    " fuzzy finder`
`Plug 'https://github.com/junegunn/fzf.vim                                               " fuzzy finder`
`Plug 'https://github.com/mileszs/ack.vim                                                " search tool`
`Plug 'https://github.com/szw/vim-maximizer                                              " window maximizer`
`Plug 'https://github.com/preservim/tagbar                                               " Tagbar for code navigation`
`Plug 'https://github.com/wellle/context.vim'`
`Plug 'https://github.com/christoomey/vim-tmux-navigator                                 " ctrl-h, ctrl-k, ctrl-l, ctrl-j to navigate and more`
`Plug 'https://github.com/kana/vim-repeat                                                " helps to reapeat keys press`
`Plug 'https://github.com/chun-yang/auto-pairs                                           " auto complete the pair of brackets, [], {}, (), '', "", etc`
`Plug 'https://github.com/alvan/vim-closetag                                             " close tags`
`Plug 'https://github.com/mattesgroeger/vim-bookmarks'`                                  " vim bookmarking plugin
`Plug 'https://github.com/terryma/vim-multiple-cursors                                   " CTRL + N for multiple cursors`
`" Plug 'https://github.com/easymotion/vim-easymotion                                    " n and N was not working add this or remove the easymotion.vim plugin file`

+-----------------------------------------------------+
|                    SNIPPETS & CODES                 |
+-----------------------------------------------------+
`Plug 'https://github.com/sirver/ultisnips                                               " snippets`
`Plug 'https://github.com/mattn/emmet-vim                                                " emmets`
`Plug 'https://github.com/vimwiki/vimwiki                                                " wikis`

+-----------------------------------------------------+
|                 TESTING & DEBUGGING                 |
+-----------------------------------------------------+
`Plug 'https://github.com/puremourning/vimspector                                                " debugger`
`Plug 'https://github.com/janko/vim-test                                                 " testing `

+-----------------------------------------------------+
|                 DEVELOPER SPECIFIC                  |
+-----------------------------------------------------+
`" Plug 'https://github.com/wakatime/vim-wakatime                                                " wakatime a developer statistics provider`

+-----------------------------------------------------+
|                 EXTERNAL USE PLUGINS                |
+-----------------------------------------------------+
`Plug 'https://github.com/glacambre/firenvim', { 'do': { _ -> firenvim#install(0) } }`


----------------------------------------------------------------------------
4. Author Details                                *sobhanbera-author-details*

Name    :   Sobhan Bera
Email   :   sobhanbera258@gmail.com
GitHub  :   https://github.com/sobhanbera

